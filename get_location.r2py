"""
get_location.r2py

Yanyan Zhuang, UBC, Canada

Change log:

v 0.0.1, 20150428 1400 YZ
  Using sensor lib code to pull location data from a phone 

"""


sensorlib = dy_import_module("sensorlib.r2py")

def get_location():
  # get a connection to communicate with sensors
  port = sensorlib.get_connectionport()
  sensor_socket = sensorlib.getconnection(port)

  sensorlib.request_data(sensor_socket, 'startLocating', [])

  # try to read current location
  location_data = sensorlib.request_data(sensor_socket, 'readLocation', []) 

  # will try to get location data RETRIES times at most before giving up
  # note: readLocation call can timeout, or not responsive
  if not location_data:
    RETRIES = 5 
    for retry in range(RETRIES):
      sleep(2)
      # location_data is in the form {u'network': {u'bearing': 0, u'altitude': 0, u'time': x, 
      # u'longitude': x, u'provider': u'network', u'latitude': x, u'speed': 0, u'accuracy': x}}
      location_data = sensorlib.request_data(sensor_socket, 'readLocation', [])
      if location_data:
        break
    else:
      # raise Exception("Could not get location data!\n")
      # location_data is in the form {u'passive': {u'bearing': 0, u'altitude': 0, u'time': x, 
      # u'longitude': x, u'provider': u'network', u'latitude': s, u'speed': 0, u'accuracy': x}, 
      # u'network': {u'bearing': 0, u'altitude': 0, u'time': x, u'longitude': x, 
      # u'provider': u'network', u'latitude': x, u'speed': 0, u'accuracy': x}, u'gps': None}
      location_data = sensorlib.request_data(sensor_socket, 'getLastKnownLocation', [])
      
  sensorlib.request_data(sensor_socket, 'stopLocating', []) 
  assert len(location_data.keys()) >= 1   # should return at least one provider

  location = None
  for i in range(len(location_data.keys())):
    provider = location_data.keys()[i]
    location = location_data[provider]
    if location != None:
      break
  else:
    raise Exception("Could not get location data!\n")

  # convert unicode format (u'longitude') to ASCII (longitude)
  mylocation = {"latitude": location["latitude"], "longitude": location["longitude"], 
                "bearing": location["bearing"], "altitude": location["altitude"], 
                "time": location["time"], "provider": location["provider"], 
                "speed": location["speed"], "accuracy": location["accuracy"]}

  sensor_socket.close()
  return mylocation

log(get_location())

"""A 'security layer'-like thing that adds getsenor.r2py's calls to the 
child namespace so that they appear to belong to the API.

Usage:
start dylink.r2py encasementlib.r2py sensor_layer.r2py [any blur layers] \
    user-program.r2py
"""

getsensor = dy_import_module("getsensor.r2py")


CHILD_CONTEXT_DEF["get_battery_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_battery_info,
}


CHILD_CONTEXT_DEF["get_bluetooth_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_bluetooth_info,
}


CHILD_CONTEXT_DEF["is_roaming"] = {
    "type": "func",
    "args": None,
    "return": bool,
    "exceptions": "any",
    "target": getsensor.is_roaming,
}



CHILD_CONTEXT_DEF["get_cellular_provider_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_cellular_provider_info,
}


CHILD_CONTEXT_DEF["get_cell_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_cell_info,
}


CHILD_CONTEXT_DEF["get_SIM_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_SIM_info,
}


CHILD_CONTEXT_DEF["get_phone_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_phone_info,
}


CHILD_CONTEXT_DEF["get_cellular_signal_strengths"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_cellular_signal_strengths,
}



CHILD_CONTEXT_DEF["get_location"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_location,
}


CHILD_CONTEXT_DEF["get_lastknown_location"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_lastknown_location,
}


CHILD_CONTEXT_DEF["get_geolocation"] = {
    "type": "func",
    "args": (float, float, int),
    "return": list,
    "exceptions": "any",
    "target": getsensor.get_geolocation,
}



CHILD_CONTEXT_DEF["microphone_record"] = {
    "type": "func",
    "args": (string, int),
    "return": None,
    "exceptions": "any",
    "target": getsensor.microphone_record,
}



CHILD_CONTEXT_DEF["is_media_playing"] = {
    "type": "func",
    "args": None,
    "return": bool,
    "exceptions": "any",
    "target": getsensor.is_media_playing,
}



CHILD_CONTEXT_DEF["get_media_play_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_media_play_info,
}


CHILD_CONTEXT_DEF["get_mode_settings"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_mode_settings,
}


CHILD_CONTEXT_DEF["get_screen_settings"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_screen_settings,
}


CHILD_CONTEXT_DEF["get_media_volume"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_media_volume,
}


CHILD_CONTEXT_DEF["get_ringer_volume"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_ringer_volume,
}


CHILD_CONTEXT_DEF["start_sensing"] = {
    "type": "func",
    "args": (int, int),
    "return": None,
    "exceptions": "any",
    "target": getsensor.start_sensing,
}


CHILD_CONTEXT_DEF["stop_sensing"] = {
    "type": "func",
    "args": None,
    "return": None,
    "exceptions": "any",
    "target": getsensor.stop_sensing,
}


CHILD_CONTEXT_DEF["get_sensors"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_sensors,
}


CHILD_CONTEXT_DEF["get_sensors_accuracy"] = {
    "type": "func",
    "args": None,
    "return": int,
    "exceptions": "any",
    "target": getsensor.get_sensors_accuracy,
}



CHILD_CONTEXT_DEF["get_light"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_light,
}


CHILD_CONTEXT_DEF["get_acceleration"] = {
    "type": "func",
    "args": None,
    "return": list,
    "exceptions": "any",
    "target": getsensor.get_acceleration,
}



CHILD_CONTEXT_DEF["get_magnetic_field"] = {
    "type": "func",
    "args": None,
    "return": list,
    "exceptions": "any",
    "target": getsensor.get_magnetic_field,
}


CHILD_CONTEXT_DEF["get_orientation"] = {
    "type": "func",
    "args": None,
    "return": list,
    "exceptions": "any",
    "target": getsensor.get_orientation,
}



CHILD_CONTEXT_DEF["is_wifi_enabled"] = {
    "type": "func",
    "args": None,
    "return": bool,
    "exceptions": "any",
    "target": getsensor.is_wifi_enabled,
}


CHILD_CONTEXT_DEF["get_wifi_connection_info"] = {
    "type": "func",
    "args": None,
    "return": dict,
    "exceptions": "any",
    "target": getsensor.get_wifi_connection_info,
}


CHILD_CONTEXT_DEF["do_wifi_scan"] = {
    "type": "func",
    "args": None,
    "return": list,
    "exceptions": "any",
    "target": getsensor.do_wifi_scan,
}

secure_dispatch_module()

